<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lgy.shallweshare.users.dao.UsersDao">
	<select id="getUserInfo" parameterType="hashmap"
		resultType="com.lgy.shallweshare.users.dto.UsersDto">
		select 
			*
		from users
		where u_id = #{u_id,jdbcType = VARCHAR}
	</select>
	
	<!-- 로그인 -->
    <select id="signIn" resultType="com.lgy.shallweshare.users.dto.UsersDto" parameterType="hashmap">
        SELECT *
        FROM users
        WHERE u_sns_id = #{u_sns_id,jdbcType=VARCHAR}
        AND u_pwd = #{u_pwd,jdbcType=VARCHAR}
    </select>
    
    
<!-- 회원가입 -->
    <insert id="signUp" parameterType="hashmap">
     	insert into users(u_id, u_role,u_login_platform,u_sns_id,u_pwd, u_name
                    ,u_nickname,u_phoneNum,u_gender,u_email,u_bank_account
                    ,u_authentication,u_temperature,u_created) 
		values((SELECT NVL(MAX(u_id), 0) + 1 FROM users),'USER', 'NORMAL',#{u_sns_id},#{u_pwd},#{u_name}
      		 	,#{u_nickname},#{u_phoneNum},#{u_gender},#{u_email}
     		 	,#{u_bank_account},'T','30',SYSDATE)
     </insert>
     		
     		
     		 	
     	 	
    <!--아이디 중복 검사 -->
    <select id="idChk" resultType="integer" parameterType="String">
    	select count(*)
    	from users
    	where u_sns_id= #{u_sns_id,jdbcType=VARCHAR}
    </select> 	
    
    <!--닉네임 중복 검사 -->
        <select id="nickChk" resultType="integer" parameterType="String">
    	select count(*)
    	from users
    	where u_nickname= #{u_nickname,jdbcType=VARCHAR}
    </select> 
    
    
   <!--닉네임 중복 검사 (회원정보 수정에서 사용) -->
        <select id="nickModifyChk" resultType="integer" parameterType="hashmap">
    	select count(*)
		from users
		where u_nickname =  #{u_nickname,jdbcType=VARCHAR}
		and u_id NOT LIKE #{u_id,jdbcType=VARCHAR}
    </select> 
    
    <!-- 유저 정보 찾기 -->
    <select id="userSearch" resultType="com.lgy.shallweshare.users.dto.UsersDto" parameterType="hashmap">
        SELECT *
        FROM users
        WHERE u_id=#{u_id,jdbcType=VARCHAR}
    </select>
    
    
<!--     회원 수정 -->
    <update id="userModify" parameterType="hashmap">
        UPDATE users
        SET
        u_pwd = #{u_pwd},
        u_nickname =  #{u_nickname},
        u_phoneNum = #{u_phoneNum},
        u_email  = #{u_email},
        u_bank_account = #{u_bank_account}
        WHERE u_id = #{u_id,jdbcType=VARCHAR}
    </update>


<!-- 	회원탈퇴 -->
    <delete id="userDel" parameterType="hashmap">
        DELETE FROM users
        WHERE u_id = #{u_id,jdbcType=VARCHAR}
    </delete>
    
    
<!--      	kakao -->
<!--             userInfo.put("name", name); -->
<!--             userInfo.put("id", id); -->
<!--             userInfo.put("gender", gender); -->

     	<!-- 정보 찾기 -->
	<select id="findKakao" resultType="com.lgy.shallweshare.users.dto.KakaoDTO" parameterType="hashmap">
			select * 
		from users 
		where u_name=#{name,jdbcType=VARCHAR} 
				and u_sns_id=#{id,jdbcType=VARCHAR} 
				and u_gender=#{gender,jdbcType=VARCHAR} 
	</select>
        
<!-- 카카오 회원가입 -->
    <insert id="kakaoInsert" parameterType="hashmap">
     		 	insert into users
     		 		(u_id, u_role,u_login_platform
     		 		,u_name,u_sns_id,u_gender
     		 		,u_authentication,u_temperature,u_created)
     		 						
     		 	values((SELECT NVL(MAX(u_id), 0) + 1 FROM users)
     		 			,'USER', 'KAKAO'
     		 			,#{name,jdbcType=VARCHAR}
     		 			,#{id,jdbcType=VARCHAR}
     		 			,#{gender,jdbcType=VARCHAR}
     		 			,'T','30',SYSDATE)
     </insert> 	 	
     
<!-- 카카오 추가 회원가입 (업데이트로 값 넣어줌) -->
    <update id="kakaoSignUp" parameterType="hashmap">
        UPDATE users
        SET
        u_email = #{u_email},
        u_nickname = #{u_nickname},
        u_phoneNum =  #{u_phoneNum},
        u_bank_account = #{u_bank_account}
        WHERE u_id = #{u_id,jdbcType=VARCHAR}
    </update>
    
    
<!--     카카오 회원 수정 -->
    <update id="kakaoUserModify" parameterType="hashmap">
        UPDATE users
        SET
        u_email = #{u_email,jdbcType=VARCHAR},
        u_nickname = #{u_nickname,jdbcType=VARCHAR},
        u_phoneNum = #{u_phoneNum,jdbcType=VARCHAR},
        u_bank_account = #{u_bank_account,jdbcType=VARCHAR}
        WHERE u_id = #{u_id,jdbcType=VARCHAR}
    </update>
    
    
        <!-- 카카오 유저 정보 찾기 -->
    <select id="kakaoUserSearch" resultType="com.lgy.shallweshare.users.dto.KakaoDTO" parameterType="hashmap">
        SELECT *
        FROM users
        WHERE u_id=#{u_id,jdbcType=VARCHAR}
    </select>
	
</mapper>